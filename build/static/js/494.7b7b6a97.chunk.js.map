{"version":3,"file":"static/js/494.7b7b6a97.chunk.js","mappings":"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","sources":["Components/Table/EventUpdate/TableEvent.jsx","webpack://client/./src/Components/UI/InputFileXlsBox/InputFileXlsBox.module.css?0337","Components/UI/InputFileXlsBox/InputFileXlsBox.jsx","utils/titles.js","webpack://client/./src/Pages/PagesCss/Events.module.css?fb98","Pages/Admin/Events.jsx","api/protocol.js"],"sourcesContent":["import React from 'react';\r\nimport { Adaptive } from '../../../Hoc/Adaptive';\r\nimport classes from '../Table.module.css';\r\n\r\nconst TableEvent = ({ event }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{event?.eventName ? (\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t<th>Дата</th>\r\n\t\t\t\t\t\t\t<th>Соревнование</th>\r\n\t\t\t\t\t\t\t<Adaptive sizeScreen=\"lg\">\r\n\t\t\t\t\t\t\t\t<th>Город</th>\r\n\t\t\t\t\t\t\t</Adaptive>\r\n\t\t\t\t\t\t\t<th>Дистанция</th>\r\n\t\t\t\t\t\t\t<th>Тип</th>\r\n\t\t\t\t\t\t\t<th>Участ.</th>\r\n\t\t\t\t\t\t\t<Adaptive sizeScreen=\"sm\">\r\n\t\t\t\t\t\t\t\t<th>Сегмент в Страве</th>\r\n\t\t\t\t\t\t\t</Adaptive>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t<tr key={event._id}>\r\n\t\t\t\t\t\t\t<td>{1}</td>\r\n\t\t\t\t\t\t\t<td>{event.eventDate}</td>\r\n\t\t\t\t\t\t\t<td className={classes.align__left}>{event.eventName}</td>\r\n\t\t\t\t\t\t\t<Adaptive sizeScreen=\"lg\">\r\n\t\t\t\t\t\t\t\t<td>{event.eventCity}</td>\r\n\t\t\t\t\t\t\t</Adaptive>\r\n\t\t\t\t\t\t\t<td>{event.distance}</td>\r\n\t\t\t\t\t\t\t<td>{event.type}</td>\r\n\t\t\t\t\t\t\t<td>{event.quantityRiders}</td>\r\n\t\t\t\t\t\t\t<Adaptive sizeScreen=\"sm\">\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.link__btn}\r\n\t\t\t\t\t\t\t\t\t\thref={`https://${event.segmentStrava}`}\r\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tStrava\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</Adaptive>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t) : undefined}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TableEvent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"box__input\":\"InputFileXlsBox_box__input__0CzB1\",\"box__interactive\":\"InputFileXlsBox_box__interactive__V2GNx\",\"box__title\":\"InputFileXlsBox_box__title__EBkgp\",\"file\":\"InputFileXlsBox_file__fpNXp\",\"mr-10\":\"InputFileXlsBox_mr-10__hdnsq\"};","import React from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport { changeTitlesEvent, changeTitlesResults } from '../../../utils/titles';\r\n\r\nimport ButtonInput from '../ButtonInput/ButtonInput';\r\nimport Checkmark from '../Checkmark/Checkmark';\r\n\r\nimport classes from './InputFileXlsBox.module.css';\r\n\r\nexport const InputFileXlsBox = ({\r\n\tsetResults,\r\n\tsetEvent,\r\n\ttitle,\r\n\tboxClass,\r\n\tkeyObject,\r\n\taccept,\r\n\tfile,\r\n\tsetFile,\r\n\tresetRef,\r\n}) => {\r\n\tconst getFile = event => {\r\n\t\tconst fileRow = event.target.files[0];\r\n\t\tsetFile(fileRow);\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onload = function (e) {\r\n\t\t\tconst data = e.target.result;\r\n\t\t\tconst book = XLSX.read(data, { type: 'binary' });\r\n\t\t\tconst resultsRow = book.Sheets['Результаты'];\r\n\t\t\tconst eventRow = book.Sheets['Описание'];\r\n\r\n\t\t\tconst resultsJSON = XLSX.utils.sheet_to_json(resultsRow, { range: 0, raw: false });\r\n\t\t\tconst eventJSON = XLSX.utils.sheet_to_json(eventRow, { range: 0, raw: false });\r\n\r\n\t\t\tsetResults(changeTitlesResults(resultsJSON));\r\n\t\t\tsetEvent(changeTitlesEvent(eventJSON));\r\n\t\t};\r\n\t\treader.readAsBinaryString(fileRow);\r\n\t};\r\n\treturn (\r\n\t\t<div className={`${classes.box__input} ${classes[boxClass]}`}>\r\n\t\t\t<h2 className={classes.box__title}>{title}</h2>\r\n\t\t\t<div className={classes.box__interactive}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ButtonInput getClick={getFile} accept={accept} resetRef={resetRef}>\r\n\t\t\t\t\t\tВыбрать файл\r\n\t\t\t\t\t</ButtonInput>\r\n\t\t\t\t\t<span className={classes.file}>{file.name}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Checkmark isCompleted={file.name} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport function changeTitlesEvent(data) {\r\n\treturn {\r\n\t\teventDate: data[0]?.['Дата'],\r\n\t\teventName: data[0]?.['Название'],\r\n\t\tdistance: data[0]?.['Дистанция'],\r\n\t\ttype: data[0]?.['Тип заезда'],\r\n\t\teventCity: data[0]?.['Место старта'],\r\n\t\tsegmentStrava: data[0]?.['Сегмент в Страве'],\r\n\t};\r\n}\r\nexport function changeTitlesResults(data) {\r\n\tconst results = [];\r\n\tdata.forEach(result => {\r\n\t\tconst interim = {};\r\n\t\tinterim._id = uuidv4();\r\n\t\tinterim.place = result?.['Место'];\r\n\t\tinterim.number = result?.['Номер'];\r\n\t\tinterim.athlete = result?.['ФИО'];\r\n\t\tinterim.athleteCity = result?.['Город'];\r\n\t\tinterim.athleteTeam = result?.['Команда'];\r\n\t\tinterim.timeTotal = result?.['Время'];\r\n\t\tinterim.distance = result?.['Дистанция'];\r\n\t\tinterim.мужской = result?.['Пол'];\r\n\t\tinterim.birthday = result?.['Год рождения'];\r\n\t\tresults.push(interim);\r\n\t});\r\n\treturn results;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Events_wrapper__cDEhu\",\"title\":\"Events_title__2YW0l\"};","import React, { useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { postResults } from '../../api/protocol';\r\nimport TableEvent from '../../Components/Table/EventUpdate/TableEvent';\r\nimport TableResults from '../../Components/Table/Results/TableResults';\r\nimport Button from '../../Components/UI/Button/Button';\r\n\r\nimport { InputFileXlsBox } from '../../Components/UI/InputFileXlsBox/InputFileXlsBox';\r\nimport { getAlert } from '../../redux/features/alertMessageSlice';\r\n\r\nimport classes from '../PagesCss/Events.module.css';\r\n\r\nconst Events = () => {\r\n\tconst [results, setResults] = useState([]);\r\n\tconst [event, setEvent] = useState({});\r\n\tconst [file, setFile] = useState({});\r\n\tconst resetRef = useRef('');\r\n\r\n\tconst navigate = useNavigate();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst saveResults = () => {\r\n\t\tpostResults(results, event)\r\n\t\t\t.then(data => {\r\n\t\t\t\tif (data.status === 201) {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tgetAlert({\r\n\t\t\t\t\t\t\tmessage: 'Протокол соревнований сохранен на сервере!',\r\n\t\t\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\t\t\tisOpened: true,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t\tnavigate('/admin/events/edit');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tgetAlert({\r\n\t\t\t\t\t\tmessage: 'Ошибка при сохранении протокола нас сервере!',\r\n\t\t\t\t\t\ttype: 'error',\r\n\t\t\t\t\t\tisOpened: true,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst clearStates = () => {\r\n\t\tsetEvent({});\r\n\t\tsetResults([]);\r\n\t\tsetFile({});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section className={classes.wrapper}>\r\n\t\t\t<h2 className={classes.title}>Загрузка протоколов соревнований</h2>\r\n\t\t\t<article></article>\r\n\t\t\t<InputFileXlsBox\r\n\t\t\t\tfile={file}\r\n\t\t\t\tsetFile={setFile}\r\n\t\t\t\tresetRef={resetRef}\r\n\t\t\t\tsetResults={setResults}\r\n\t\t\t\tevent={event}\r\n\t\t\t\tsetEvent={setEvent}\r\n\t\t\t\ttitle={'Загрузка протокола  в формате .xlsx'}\r\n\t\t\t\tkeyObject={'protocol'}\r\n\t\t\t\taccept={'.xlsx'}\r\n\t\t\t/>\r\n\t\t\t<TableEvent event={event} />\r\n\t\t\t<TableResults results={results} setResults={setResults} removeLink={true} />\r\n\t\t\t{results.length ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Button getClick={saveResults} additionalClasses=\"mr-20\">\r\n\t\t\t\t\t\tСохранить\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button getClick={clearStates} additionalClasses=\"mr-20\">\r\n\t\t\t\t\t\tОтменить\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</>\r\n\t\t\t) : undefined}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Events;\r\n","import { myAxios } from './axios';\r\n\r\nexport async function postResults(results, event) {\r\n\ttry {\r\n\t\tconst response = await myAxios({\r\n\t\t\tmethod: 'POST',\r\n\t\t\turl: '/api/protocol',\r\n\t\t\tdata: { results, event },\r\n\t\t});\r\n\t\treturn response;\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}\r\nexport async function postDeleteEvent(eventId) {\r\n\ttry {\r\n\t\tconst response = await myAxios({ method: 'DELETE', url: `/api/event`, data: { eventId } });\r\n\t\treturn response;\r\n\t} catch (error) {\r\n\t\tthrow error;\r\n\t}\r\n}\r\n"],"names":["event","eventName","Adaptive","sizeScreen","eventDate","className","classes","eventCity","distance","type","quantityRiders","href","segmentStrava","target","rel","_id","undefined","InputFileXlsBox","setResults","setEvent","title","boxClass","accept","keyObject","file","setFile","resetRef","ButtonInput","getClick","fileRow","files","reader","FileReader","onload","e","data","result","book","XLSX","resultsRow","Sheets","eventRow","resultsJSON","range","raw","eventJSON","results","forEach","interim","uuidv4","place","number","athlete","athleteCity","athleteTeam","timeTotal","мужской","birthday","push","changeTitlesResults","changeTitlesEvent","readAsBinaryString","name","Checkmark","isCompleted","useState","useRef","navigate","useNavigate","dispatch","useDispatch","TableResults","removeLink","length","Button","postResults","then","status","getAlert","message","isOpened","catch","error","additionalClasses","myAxios","method","url","response","console","log","postDeleteEvent","eventId"],"sourceRoot":""}