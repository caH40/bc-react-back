{"version":3,"file":"static/js/202.7597f50b.chunk.js","mappings":"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","sources":["Components/Table/EventsModerate/TableEventsModerate.jsx","webpack://client/./src/Pages/PagesCss/EventsEdit.module.css?b488","Pages/Admin/EventsEdit.jsx","api/protocol.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getEvents } from '../../../api/events';\r\nimport { postDeleteEvent } from '../../../api/protocol';\r\nimport { Adaptive } from '../../../Hoc/Adaptive';\r\nimport { getAlert } from '../../../redux/features/alertMessageSlice';\r\nimport { mySort } from '../../../utils/mysort';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from '../Table.module.css';\r\nimport ThSort from './ThSort';\r\n\r\nconst TableEventsModerate = () => {\r\n\tconst [sort, setSort] = useState({\r\n\t\tsortDirection: 'up',\r\n\t\tsortField: 'eventDate',\r\n\t});\r\n\tconst [events, setEvents] = useState([]);\r\n\tconst [trigger, setTrigger] = useState(false);\r\n\r\n\tconst navigate = useNavigate();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst deleteEvent = (eventId, eventName) => {\r\n\t\tconst isConfirmed = window.confirm(\r\n\t\t\t`Вы действительно хотите удалить протокол соревнования \"${eventName}\"`\r\n\t\t);\r\n\t\tif (!isConfirmed)\r\n\t\t\treturn dispatch(\r\n\t\t\t\tgetAlert({\r\n\t\t\t\t\tmessage: 'Отмена удаления протокола соревнования',\r\n\t\t\t\t\ttype: 'warning',\r\n\t\t\t\t\tisOpened: true,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\tpostDeleteEvent(eventId).then(data => {\r\n\t\t\tdispatch(getAlert({ message: data.data.message, type: 'success', isOpened: true }));\r\n\t\t\tsetTrigger(prev => !prev);\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetEvents().then(data => {\r\n\t\t\tif (!data) return;\r\n\t\t\tconst dataSorted = mySort(data, 'eventDate', 'up');\r\n\t\t\tsetEvents(dataSorted);\r\n\t\t});\r\n\t}, [dispatch, trigger]);\r\n\r\n\t// const toLink = eventId => navigate(`results/${eventId}`);\r\n\treturn (\r\n\t\t<table>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th scope=\"col\">#</th>\r\n\t\t\t\t\t<ThSort\r\n\t\t\t\t\t\tsort={sort}\r\n\t\t\t\t\t\tsetSort={setSort}\r\n\t\t\t\t\t\tdata={events}\r\n\t\t\t\t\t\tsetData={setEvents}\r\n\t\t\t\t\t\tfield={'eventDate'}>\r\n\t\t\t\t\t\tДата\r\n\t\t\t\t\t</ThSort>\r\n\t\t\t\t\t<th scope=\"col\">Соревнование</th>\r\n\t\t\t\t\t<Adaptive sizeScreen=\"lg\">\r\n\t\t\t\t\t\t<th scope=\"col\">Город</th>\r\n\t\t\t\t\t</Adaptive>\r\n\t\t\t\t\t<ThSort\r\n\t\t\t\t\t\tsort={sort}\r\n\t\t\t\t\t\tsetSort={setSort}\r\n\t\t\t\t\t\tdata={events}\r\n\t\t\t\t\t\tsetData={setEvents}\r\n\t\t\t\t\t\tfield={'quantityRiders'}>\r\n\t\t\t\t\t\tУчаст.\r\n\t\t\t\t\t</ThSort>\r\n\t\t\t\t\t<Adaptive sizeScreen=\"sm\">\r\n\t\t\t\t\t\t<th scope=\"col\">Сегмент в Страве</th>\r\n\t\t\t\t\t</Adaptive>\r\n\t\t\t\t\t<th>Редактирование описания</th>\r\n\t\t\t\t\t<th>Редактирование результатов</th>\r\n\t\t\t\t\t<th>Удаление</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{events.map((event, index) => (\r\n\t\t\t\t\t<tr key={event._id}>\r\n\t\t\t\t\t\t<td>{index + 1}</td>\r\n\t\t\t\t\t\t<td>{event.eventDate}</td>\r\n\t\t\t\t\t\t<td className={classes.align__left}>{event.eventName}</td>\r\n\t\t\t\t\t\t<Adaptive sizeScreen=\"lg\">\r\n\t\t\t\t\t\t\t<td>{event.eventCity}</td>\r\n\t\t\t\t\t\t</Adaptive>\r\n\t\t\t\t\t\t<td>{event.quantityRiders}</td>\r\n\t\t\t\t\t\t<Adaptive sizeScreen=\"sm\">\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\tclassName={classes.link__btn}\r\n\t\t\t\t\t\t\t\t\thref={event.segmentStrava}\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\trel=\"noreferrer\">\r\n\t\t\t\t\t\t\t\t\tStrava\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</Adaptive>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<Button getClick={() => navigate(event._id)} additionalClasses=\"td__link\">\r\n\t\t\t\t\t\t\t\tРедактировать\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<Button getClick={() => navigate(`results/${event._id}`)} additionalClasses=\"td__link\">\r\n\t\t\t\t\t\t\t\tРедактировать\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tgetClick={() => deleteEvent(event._id, event.eventName)}\r\n\t\t\t\t\t\t\t\ttargetClass=\"warning\"\r\n\t\t\t\t\t\t\t\tadditionalClasses=\"td__link\">\r\n\t\t\t\t\t\t\t\tУдалить\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t))}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n};\r\n\r\nexport default TableEventsModerate;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"EventsEdit_wrapper__fEFF6\",\"title\":\"EventsEdit_title__H359x\"};","import React from 'react';\r\nimport TableEventsModerate from '../../Components/Table/EventsModerate/TableEventsModerate';\r\n\r\nimport classes from '../PagesCss/EventsEdit.module.css';\r\n\r\nconst EventsEdit = () => {\r\n\treturn (\r\n\t\t<section className={classes.wrapper}>\r\n\t\t\t<h2 className={classes.title}>Соревнования для редактирования</h2>\r\n\t\t\t<TableEventsModerate />\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default EventsEdit;\r\n","import { myAxios } from './axios';\r\n\r\nexport async function postResults(results, event) {\r\n\ttry {\r\n\t\tconst response = await myAxios({\r\n\t\t\tmethod: 'POST',\r\n\t\t\turl: '/api/protocol',\r\n\t\t\tdata: { results, event },\r\n\t\t});\r\n\t\treturn response;\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}\r\nexport async function postDeleteEvent(eventId) {\r\n\ttry {\r\n\t\tconst response = await myAxios({ method: 'DELETE', url: `/api/event`, data: { eventId } });\r\n\t\treturn response;\r\n\t} catch (error) {\r\n\t\tthrow error;\r\n\t}\r\n}\r\n"],"names":["useState","sortDirection","sortField","sort","setSort","events","setEvents","trigger","setTrigger","navigate","useNavigate","dispatch","useDispatch","useEffect","getEvents","then","data","dataSorted","mySort","scope","ThSort","setData","field","Adaptive","sizeScreen","map","event","index","eventDate","className","classes","eventName","eventCity","quantityRiders","href","segmentStrava","target","rel","Button","getClick","_id","additionalClasses","eventId","window","confirm","getAlert","message","type","isOpened","postDeleteEvent","prev","deleteEvent","targetClass","postResults","results","myAxios","method","url","response","console","log"],"sourceRoot":""}