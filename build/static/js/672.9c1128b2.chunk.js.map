{"version":3,"file":"static/js/672.9c1128b2.chunk.js","mappings":"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","sources":["Components/Table/ResultsEdit/TableResultsEdit.jsx","webpack://client/./src/Pages/PagesCss/EventResultsEdit.module.css?7b41","Pages/Admin/EventResultsEdit.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { Adaptive } from '../../../Hoc/Adaptive';\r\nimport classes from '../Table.module.css';\r\nimport ThSort from '../EventsModerate/ThSort';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nexport const TableResultsEdit = ({\r\n\tresults,\r\n\tsetResults,\r\n\tgetClick,\r\n\tremoveLink,\r\n\tdeleteResult,\r\n}) => {\r\n\tconst [sort, setSort] = useState({\r\n\t\tsortDirection: 'down',\r\n\t\tsortField: 'place',\r\n\t});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{results?.length ? (\r\n\t\t\t\t<table className=\"table tableResult\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<ThSort\r\n\t\t\t\t\t\t\t\tsort={sort}\r\n\t\t\t\t\t\t\t\tsetSort={setSort}\r\n\t\t\t\t\t\t\t\tdata={results}\r\n\t\t\t\t\t\t\t\tsetData={setResults}\r\n\t\t\t\t\t\t\t\tfield={'place'}>\r\n\t\t\t\t\t\t\t\t#\r\n\t\t\t\t\t\t\t</ThSort>\r\n\t\t\t\t\t\t\t<Adaptive sizeScreen=\"lg\">\r\n\t\t\t\t\t\t\t\t<ThSort\r\n\t\t\t\t\t\t\t\t\tsort={sort}\r\n\t\t\t\t\t\t\t\t\tsetSort={setSort}\r\n\t\t\t\t\t\t\t\t\tdata={results}\r\n\t\t\t\t\t\t\t\t\tsetData={setResults}\r\n\t\t\t\t\t\t\t\t\tfield={'number'}>\r\n\t\t\t\t\t\t\t\t\tНомер\r\n\t\t\t\t\t\t\t\t</ThSort>\r\n\t\t\t\t\t\t\t</Adaptive>\r\n\t\t\t\t\t\t\t<ThSort\r\n\t\t\t\t\t\t\t\tsort={sort}\r\n\t\t\t\t\t\t\t\tsetSort={setSort}\r\n\t\t\t\t\t\t\t\tdata={results}\r\n\t\t\t\t\t\t\t\tsetData={setResults}\r\n\t\t\t\t\t\t\t\tfield={'athlete'}>\r\n\t\t\t\t\t\t\t\tУчастник\r\n\t\t\t\t\t\t\t</ThSort>\r\n\t\t\t\t\t\t\t<Adaptive sizeScreen=\"sm\">\r\n\t\t\t\t\t\t\t\t<ThSort\r\n\t\t\t\t\t\t\t\t\tsort={sort}\r\n\t\t\t\t\t\t\t\t\tsetSort={setSort}\r\n\t\t\t\t\t\t\t\t\tdata={results}\r\n\t\t\t\t\t\t\t\t\tsetData={setResults}\r\n\t\t\t\t\t\t\t\t\tfield={'athleteCity'}>\r\n\t\t\t\t\t\t\t\t\tГород\r\n\t\t\t\t\t\t\t\t</ThSort>\r\n\t\t\t\t\t\t\t</Adaptive>\r\n\t\t\t\t\t\t\t<Adaptive sizeScreen=\"lg\">\r\n\t\t\t\t\t\t\t\t<ThSort\r\n\t\t\t\t\t\t\t\t\tsort={sort}\r\n\t\t\t\t\t\t\t\t\tsetSort={setSort}\r\n\t\t\t\t\t\t\t\t\tdata={results}\r\n\t\t\t\t\t\t\t\t\tsetData={setResults}\r\n\t\t\t\t\t\t\t\t\tfield={'athleteTeam'}>\r\n\t\t\t\t\t\t\t\t\tКоманда\r\n\t\t\t\t\t\t\t\t</ThSort>\r\n\t\t\t\t\t\t\t\t<ThSort\r\n\t\t\t\t\t\t\t\t\tsort={sort}\r\n\t\t\t\t\t\t\t\t\tsetSort={setSort}\r\n\t\t\t\t\t\t\t\t\tdata={results}\r\n\t\t\t\t\t\t\t\t\tsetData={setResults}\r\n\t\t\t\t\t\t\t\t\tfield={'distance'}>\r\n\t\t\t\t\t\t\t\t\tДистанция\r\n\t\t\t\t\t\t\t\t</ThSort>\r\n\t\t\t\t\t\t\t</Adaptive>\r\n\t\t\t\t\t\t\t<ThSort\r\n\t\t\t\t\t\t\t\tsort={sort}\r\n\t\t\t\t\t\t\t\tsetSort={setSort}\r\n\t\t\t\t\t\t\t\tdata={results}\r\n\t\t\t\t\t\t\t\tsetData={setResults}\r\n\t\t\t\t\t\t\t\tfield={'timeTotal'}>\r\n\t\t\t\t\t\t\t\tВремя\r\n\t\t\t\t\t\t\t</ThSort>\r\n\t\t\t\t\t\t\t<th>Год рождения</th>\r\n\t\t\t\t\t\t\t<th>userId</th>\r\n\t\t\t\t\t\t\t<th>Удаление результата</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{results.map(result => (\r\n\t\t\t\t\t\t\t<tr\r\n\t\t\t\t\t\t\t\tkey={result._id}\r\n\t\t\t\t\t\t\t\tonClick={() => (removeLink ? '' : getClick(result._id))}\r\n\t\t\t\t\t\t\t\tclassName={classes.pointer}>\r\n\t\t\t\t\t\t\t\t<td>{result.place}</td>\r\n\t\t\t\t\t\t\t\t<Adaptive sizeScreen=\"lg\">\r\n\t\t\t\t\t\t\t\t\t<td>{result.number}</td>\r\n\t\t\t\t\t\t\t\t</Adaptive>\r\n\t\t\t\t\t\t\t\t<td className={classes.align__left}>{result.athlete}</td>\r\n\t\t\t\t\t\t\t\t<Adaptive sizeScreen=\"sm\">\r\n\t\t\t\t\t\t\t\t\t<td>{result.athleteCity}</td>\r\n\t\t\t\t\t\t\t\t</Adaptive>\r\n\t\t\t\t\t\t\t\t<Adaptive sizeScreen=\"lg\">\r\n\t\t\t\t\t\t\t\t\t<td>{result.athleteTeam}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{result.distance}</td>\r\n\t\t\t\t\t\t\t\t</Adaptive>\r\n\t\t\t\t\t\t\t\t<td>{result.timeTotal}</td>\r\n\r\n\t\t\t\t\t\t\t\t<td>{result.birthday}</td>\r\n\t\t\t\t\t\t\t\t<td>{result.userId}</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<Button getClick={() => deleteResult(result._id)} additionalClasses=\"warning td__link\">\r\n\t\t\t\t\t\t\t\t\t\tУдалить\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t) : undefined}\r\n\t\t</>\r\n\t);\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"EventResultsEdit_wrapper__8c88W\",\"title\":\"EventResultsEdit_title__svoeE\",\"block\":\"EventResultsEdit_block__AimDy\"};","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nimport { deletePostResult, getResults } from '../../api/results';\r\nimport { TableResultsEdit } from '../../Components/Table/ResultsEdit/TableResultsEdit';\r\nimport Button from '../../Components/UI/Button/Button';\r\nimport { getAlert } from '../../redux/features/alertMessageSlice';\r\n\r\nimport classes from '../PagesCss/EventResultsEdit.module.css';\r\n\r\nconst EventResultsEdit = () => {\r\n\tconst [results, setResults] = useState([]);\r\n\tconst [trigger, setTrigger] = useState(false);\r\n\r\n\tconst { eventId } = useParams();\r\n\tconst dispatch = useDispatch();\r\n\tconst navigate = useNavigate();\r\n\r\n\tuseEffect(() => {\r\n\t\tgetResults(eventId).then(data => setResults(data));\r\n\t}, [eventId, trigger]);\r\n\r\n\tconst editResult = resultId => {\r\n\t\tnavigate(`/admin/events/edit/result/${resultId}`);\r\n\t};\r\n\r\n\tconst addResult = () => {\r\n\t\tnavigate(`/admin/events/edit/result/add/${results[0].eventId}`);\r\n\t};\r\n\r\n\tconst deleteResult = resultId => {\r\n\t\tconst athleteName = results.find(result => result._id === resultId)?.athlete;\r\n\t\tconst confirm = window.confirm(`Вы действительно хотите удалить результат \"${athleteName}\"`);\r\n\t\tif (!confirm)\r\n\t\t\treturn dispatch(\r\n\t\t\t\tgetAlert({\r\n\t\t\t\t\tmessage: `Отмена удаления результата \"${athleteName}\"`,\r\n\t\t\t\t\ttype: 'warning',\r\n\t\t\t\t\tisOpened: true,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\tdeletePostResult(resultId)\r\n\t\t\t.then(data => {\r\n\t\t\t\tdispatch(getAlert({ message: data.data.message, type: 'success', isOpened: true }));\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tgetAlert({\r\n\t\t\t\t\t\tmessage: 'Ошибка при удалении результата на сервере!',\r\n\t\t\t\t\t\ttype: 'error',\r\n\t\t\t\t\t\tisOpened: true,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t\t.finally(() => setTrigger(prev => !prev));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section className={classes.wrapper}>\r\n\t\t\t<h2 className={classes.title}>Редактирование результатов соревнования</h2>\r\n\t\t\t<TableResultsEdit\r\n\t\t\t\tresults={results}\r\n\t\t\t\tsetResults={setResults}\r\n\t\t\t\tgetClick={editResult}\r\n\t\t\t\tdeleteResult={deleteResult}\r\n\t\t\t/>\r\n\t\t\t<Button getClick={addResult} additionalClasses=\"mr-20\">\r\n\t\t\t\tДобавить результат\r\n\t\t\t</Button>\r\n\t\t\t<Button getClick={() => navigate(-1)} additionalClasses=\"warning\">\r\n\t\t\t\tНазад\r\n\t\t\t</Button>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default EventResultsEdit;\r\n"],"names":["TableResultsEdit","results","setResults","getClick","removeLink","deleteResult","useState","sortDirection","sortField","sort","setSort","length","className","ThSort","data","setData","field","Adaptive","sizeScreen","map","result","onClick","_id","classes","place","number","athlete","athleteCity","athleteTeam","distance","timeTotal","birthday","userId","Button","additionalClasses","undefined","trigger","setTrigger","eventId","useParams","dispatch","useDispatch","navigate","useNavigate","useEffect","getResults","then","resultId","athleteName","find","window","confirm","getAlert","message","type","isOpened","deletePostResult","catch","error","finally","prev"],"sourceRoot":""}